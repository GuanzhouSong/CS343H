Name:Xiaohui Chen
EID:xc2388

q1
In observe method in class ExactInference, self.beliefs stores the previous beliefs and emissionModel stores the probability values of noisy distance given by true distance. The new expected beliefs are P(e|X)*B(X)

q2
In elapseTime method, the beliefs are updated by sum(B(oldPos)*P(newPos)). The two for loops implement the equation

q3
The chooseAction first finds the closet ghost. Then it figures out the most probable location and calculates the distance between the pacman and that point. Then in the legal actions, it chooses the action that the distance between the pacman and the closest ghost is minimized

q4
The initializeUniformly method calculate the uniform distribution, then it adds particles to self.particles, which is a list to store all the particles. The number of particles is the same.

The getBeliefDistribution method create a new counter. For each occurance of a particle, the count of that particle in the counter is incremented by 1. After the counter is normalized, it is indeed the belief distribution

The observe method is similar to the observe method in exact inference. The belief distribution is calculated by calling getBeliefDistribution.If the ghost is captured, the belief probability of the jail position is 1. After the new belief distribution is updated, it calls util.sample() method repeatedly in order to generate a new particle sample

The elapseTime method is similar to the one in exact inference. The new sample is generated by calling util.sample() by using util.sample()

q5
The new sample is generated by sampling with the new position distribution in elapseTime() method

q6
The initializeParticles() method first calculated the cartesian product of the possible ghost locations according to the number of ghosts. The is shuffles the list. The for loop then repeatedly iterate through the list in order to get the correct number of particles

The observeStates() method update the belief distributions by weighting all probabilities of noisy disrtance given the real distance. Then the sample is updated according to the new belief distribution. The two special cases are handled properly.

The getBeliefDistribution is similar to the one in particle filtering.
